//
//  Fetch.swift
//  bbMetalTest
//
//  Created by Ethan on 2019/10/13.
//  Copyright Â© 2019 playplay. All rights reserved.
//

import Foundation
import BBMetalImage
import UIKit

class Fetch{
    static let shared = Fetch()
    
    enum listName {
        case adjustList
        case filterList
    }
    
   
    
    let adjustList = ["Brightness",
                      "Exposure",
                      "Contrast",
                      "Saturation",
                      "Gamma",
                      "Hue",
                      "Vibrance",
                      "White balance",
                      "Monochrome",
                      "Haze",
                      "Sharpen","Red","Green","Blue"]
    
    let filterList = ["Original","A1",
                      "A2",
                      "A3",
                      "A4",
                      "A5",
                      "A6",
                      "B1",
                      "B2",
                      "B3",
                      "B4",
                      "B5",
                      "B6","B7","B8","C1","C2","C3","C4","C5"]

    private var filterType:FilterType?
    private var imageSource: BBMetalStaticImageSource?
    private var filterValue:Float?
    
    
    let values:[[Float]] = [[-1,1],[-10,10],[0,2],[0,2],[0,2],[-180,180],[-1.2,1.2],[4000,7000],[-1,1],[-0.3,0.3],[-4,4],[127.5,382.5],[127.5,382.5],[127.5,382.5],
                            [0,0,1,1,1,0,0,5500,0,0,0,255,255,255],[0,-0.20348838,1.2383721,0.7093023,1.0,0,0,4741.2793,0,0,0,255,255,255],[0,-0.5232558,1.5552325,0.66279066,0.5959302,0,-0.3627907,4968.0234,0,0,0,255,260.93024,270.9375],[0,-0.08720931,0.8604651,0.92151165,1.2587209,0,0.5232558,5500,0,0,0.011627907,266.11917,267.2311,267.60175],[0.0,0.14534885,0.93313956,0.70348835,1.0,0.0,0.5930233,5500.0,0.0,0.2389535,0.0,255.0,255.0,248.32849],[0.0,-0.2906977,1.1046512,1.1686046,1.0,0.0,0.0,4750.0,0.11627907,0.0,0.0,275.01453,255.74127,265.74854],[0.0,0.116279066,0.7936047,1.1482558,1.0,0.0,0.0,5500.0,0.0,0.03924419,0.0,249.06976,242.02762,282.0567],[0.0,-0.029069766,1.1424419,0.78488374,1.1686046,0.0,-0.17790698,4989.8257,0.0,-0.12994187,0.046511628,250.55232,257.22385,261.6715],[0.0,-0.058139533,0.9447674,1.0,0.9883721,0.0,0.0,6005.814,0.4127907,0.0,0.0,273.53198,255.0,255.0],[0.0,-0.029069766,0.90697676,1.119186,1.1598837,0.0,0.09767442,5500.0,0.13953489,0.0,0.10465116,264.266,244.99274,217.19476],[0.0,0.17441861,1.0,0.9156977,1.0930233,0.0,0.19186048,4593.0234,0.0,0.0,0.0,292.06396,250.55232,287.9869],[0.0,-0.23255813,0.92151165,0.8517442,1.1017442,0.0,-0.18488373,4998.5464,0.0,-0.089825585,0.0,274.6439,259.44766,270.19623],[0.0,-0.14534885,1.0668604,0.7732558,1.0,0.0,-0.10813954,5500.0,0.0,0.0,0.069767445,255.0,262.04214,255.0],[0.0,-0.14534885,1.0668604,0.7732558,1.0,0.0,-0.10813954,5500.0,0.0,0.0,0.069767445,255.0,262.04214,255.0], [0.0,-0.17441861,1.1511627,0.8052325,1.0,0.0,0.0,5500.0,0.0,0.0,0.0,246.4753,283.90988,297.62354],[0.0,0.0,1.0,0.07848835,1.0,0.0,0.0,4021.8022,0.0,0.0,0.0,255.0,255.0,255.0],[0.0,0.0,1.0,0.07848835,1.0,0.0,0.0,4383.7207,0.0,0.0,0.0,255.0,255.0,255.0],[0.0,0.0,1.0,0.07848835,1.0,0.0,0.0,5255.814,0.0,0.0,0.0,255.0,255.0,255.0],[0.0,0.0,1.0,0.07848835,1.0,0.0,0.0,6764.535,0.0,0.0,0.0,255.0,255.0,255.0],[0.0,0.0,1.0,0.07848835,1.0,0.0,0.0,6764.535,0.0,-0.20581397,0.0,255.0,255.0,255.0]]
    
  

    
    
    func start(_list:listName, completion: @escaping([Filter])-> ()){
        
        var listSelected = [String]()
        
        var adjustArray:[Filter] = []
        var filterArray:[Filter] = []
        
        switch _list {
        case .adjustList:
            listSelected = adjustList
            for i in 0 ..< listSelected.count {
                
                //let filterType:FilterType = FilterType.allCases[i]
                let currentValue = (values[i][0] + values[i][1]) / 2
                let singleFilter = Filter(_filterName: listSelected[i], _values:values[i], _currentValue: currentValue)
                adjustArray.append(singleFilter)
            }
            completion(adjustArray)
        case .filterList:
            listSelected = filterList
            for i in 0 ..< listSelected.count{
                
                //let filterType:FilterType = FilterType.allCases[i + 14]
                let singleFilter = Filter(_filterName: listSelected[i], _values:values[14 + i], _currentValue: nil)
                filterArray.append(singleFilter)
            }
            completion(filterArray)
        }
    }
}



//let values:[[Float]] = [[-1,1],[-10,10],[0,2],[0,2],[0,2],[-180,180],[-1.2,1.2],[4000,7000],[-1,1],[-0.3,0.3],[-4,4],[127.5,382.5],[127.5,382.5],[127.5,382.5],
//                        [0,0,1,1,1,0,0,5500,0,0,0,255,255,255],[0,-0.2,1.2,0.7,1.0,0,0,4741.2,0,0,0,255,255,255],[0,-0.5,1.5,0.6,0.5,0,-0.3,4968.0,0,0,0,255,260.9,270.9],[0,-0.08,0.8,0.9,1.2,0,0.5,5500,0,0,0.01,266.1,267.2,267.6],[0.0,0.1,0.9,0.7,1.0,0.0,0.5,5500.0,0.0,0.2,0.0,255.0,255.0,248.3],[0.0,-0.2,1.1,1.1,1.0,0.0,0.0,4750.0,0.1,0.0,0.0,275,255.7,265.7],[0.0,0.1,0.7,1.1,1.0,0.0,0.0,5500.0,0.0,0.03,0.0,249,242,282],[0.0,-0.02,1.1,0.7,1.1,0.0,-0.1,4989.8,0.0,-0.1,0,250.5,257.2,261.6],[0.0,-0.05,0.9,1.0,0.9,0.0,0.0,6005.8,0.4,0.0,0.0,273.5,255.0,255.0],[0.0,-0.02,0.9,1.1,1.1,0.0,0.1,5500.0,0.1,0.0,0.1,264.2,244.9,217.1],[0.0,0.1,1.0,0.9,1.1,0.0,0.2,4593,0.0,0.0,0.0,292,250.5,288],[0.0,-0.2,0.9,0.8,1.1,0.0,-0.1,4998.5,0.0,-0.08,0.0,274.6,259.4,270.1],[0.0,-0.1,1,0.7,1.0,0.0,-0.1,5500.0,0.0,0.0,0,255.0,262,255.0],[0.0,-0.1,1,0.7,1.0,0.0,-0.1,5500.0,0.0,0.0,0,255.0,262,255.0], [0.0,-0.1,1.1,0.8,1.0,0.0,0.0,5500.0,0.0,0.0,0.0,246.4,283.9,297.6],[0.0,0.0,1.0,0,1.0,0.0,0.0,4021.8,0.0,0.0,0.0,255.0,255.0,255.0],[0.0,0.0,1.0,0.07,1.0,0.0,0.0,4383.7,0.0,0.0,0.0,255.0,255.0,255.0],[0.0,0.0,1.0,0,1.0,0.0,0.0,5255.8,0.0,0.0,0.0,255.0,255.0,255.0],[0.0,0.0,1.0,0,1.0,0.0,0.0,6764.5,0.0,0.0,0.0,255.0,255.0,255.0],[0.0,0.0,1.0,0,1.0,0.0,0.0,6764.5,0.0,-0.2,0.0,255.0,255.0,255.0]]
